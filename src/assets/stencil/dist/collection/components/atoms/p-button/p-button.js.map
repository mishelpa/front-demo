{"version":3,"file":"p-button.js","sourceRoot":"","sources":["../../../../src/components/atoms/p-button/p-button.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AASxE,MAAM,OAAO,OAAO;;gBAGK,SAAS;iBACJ,SAAS;gBAChB,QAAQ;gBACF,SAAS;mBACT,KAAK;oBAIL,EAAE;qBACF,MAAM;uBACJ,MAAM;uBACL,EAAE;;EAEhC,MAAM;IACJ,OAAO,CACL,cAAQ,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,IAElF,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC;MACtB,IAAI,CAAC,UAAU,EAAE,CAEZ,CACV,CAAC;EAEJ,CAAC;EAED,UAAU;IACR,OAAO,CACL,WAAK,KAAK,EAAC,YAAY;MACrB,cAAQ,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAC,SAAS,GAAU;MAE5E,IAAI,CAAC,QAAQ;QACb,aAAO,KAAK,EAAC,MAAM,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,EAAC,IAAI,EAC5E,MAAM,EAAC,IAAI,EACX,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,GACrC,CAEN,CACP,CAAA;EACH,CAAC;EAED,SAAS;IAER,OAAO;MACJ,CAAC,SAAS,CAAC,EAAE,IAAI;MACjB,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI;MACvB,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI;MACtB,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI;KACvB,CAAC;EACJ,CAAC;EAEO,aAAa;IACnB,QAAQ,IAAI,CAAC,IAAI,EAAE;MACjB,KAAK,UAAU,CAAC,CAAC,OAAO,WAAW,CAAC;MACpC,KAAK,QAAQ,CAAC,CAAC,OAAO,WAAW,CAAC;MAClC,KAAK,IAAI,CAAC,CAAC,OAAO,WAAW,CAAC;KAC/B;IAED,OAAO,UAAU,IAAI,CAAC,IAAI,EAAc,CAAC;EAC3C,CAAC;EAED,KAAK,CAAC,MAAkB;IACtB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MACjB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC3B;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport { ButtonType, Color, FontType, Size, ThemeColor } from '../../../globals/types/types';\n\n\n@Component({\n  tag: 'p-button',\n  styleUrl: 'p-button.scss',\n  shadow: true\n})\nexport class PButton {\n  @Event() buttonClicked: EventEmitter;\n\n  @Prop() text: string = 'Default';\n  @Prop() color: ThemeColor = 'primary';\n  @Prop() size: Size = 'normal';\n  @Prop() type: ButtonType = 'default';\n  @Prop() disable: boolean = false;\n\n\n  // ICON - PROPS\n  @Prop() iconname: string = '';\n  @Prop() iconcolor: Color = 'none';\n  @Prop() iconbgcolor: Color = 'none';\n  @Prop() iconviewbox: string = '';\n\n  render() {\n    return (\n      <button class={this.mainClass()} onClick={ev => this.click(ev)} disabled={this.disable}>\n        {\n          (this.type !== 'icon') &&\n          this.renderText()\n        }\n      </button>\n    );\n\n  }\n\n  renderText() {\n    return (\n      <div class=\"renderText\">\n        <p-font type={this.getButtonFont()} text={this.text} color='current'></p-font>\n        {\n          this.iconname &&\n          <p-svg class=\"icon\" name={this.iconname} viewbox={this.iconviewbox} width=\"15\"\n            height=\"15\"\n            color={this.disable ? 'lightgray' : 'white'}>\n          </p-svg>\n        }\n      </div>\n    )\n  }\n\n  mainClass() {\n\n   return {\n      [`pButton`]: true,\n      [`${this.color}`]: true,\n      [`${this.size}`]: true,\n      [`${this.type}`]: true,\n    };\n  }\n\n  private getButtonFont(): FontType {\n    switch (this.size) {\n      case 'field-md': return 'button_sm';\n      case 'normal': return 'button_md';\n      case 'sm': return 'button_sm';\n    }\n\n    return `button_${this.size}` as FontType;\n  }\n\n  click(_event: MouseEvent) {\n    if (!this.disable) {\n      this.buttonClicked.emit();\n    }\n  }\n}\n"]}