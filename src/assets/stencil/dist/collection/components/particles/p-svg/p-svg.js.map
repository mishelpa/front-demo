{"version":3,"file":"p-svg.js","sourceRoot":"","sources":["../../../../src/components/particles/p-svg/p-svg.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,MAAM,eAAe,CAAC;AAGlD,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAOtC,MAAM,OAAO,IAAI;;gBAE4B,QAAQ,CAAC,OAAO;;iBAE1B,IAAI;kBACH,IAAI;iBACN,WAAW;gBACX,MAAM;mBACF,IAAI;mBACH,IAAI;+BACM,UAAU;;EAIvD,0BAA0B;EAC1B,MAAM;IACJ,OAAO,CACL,SAAI,QAAQ,EAAC,IAAI,EACb,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,EAC3B,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,EAC1B,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GACjC,CACL,CAAC;EACJ,CAAC;EACD,YAAY;IACV,OAAO;MACL,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI;MACvB,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO;MACzB,CAAC,UAAU,CAAC,EAAE,IAAI;KACnB,CAAA;EACH,CAAC;EACD,aAAa;IACX,OAAO;MACL,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE;MACrC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE;KACxC,CAAA;EACH,CAAC;EAED,MAAM,CAAC,IAAuB;IAC5B,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3B,OAAO;uCAC0B,IAAI,CAAC,KAAK,WAAW,IAAI,CAAC,MAAM,SAAS,IAAI,CAAC,IAAI;qBACpE,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC,IAAI,CAAC,OAAO;gCAC7B,IAAI,CAAC,mBAAmB;;cAE1C,IAAI,CAAC,IAAI;;OAEhB,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, Prop, h} from \"@stencil/core\";\nimport { Color, Measures } from \"../../../globals/types/types\";\nimport { propsIcon } from \"./p-svg.interface\"\nimport { IconName } from \"./iicon\";\nimport { getIcon } from \"./icon-list\";\n\n@Component({\n    tag: 'p-svg',\n    styleUrl: 'p-svg.scss',\n    shadow: true\n  })\nexport class PSvg {\n\n    @Prop() public name: IconName | string = IconName.DEFAULT;\n    @Prop() public viewbox: string;\n    @Prop() public width: string = '24';\n    @Prop() public height: string = '24';\n    @Prop() public color: Color = 'lightgray';\n    @Prop() public fill: string = 'none';\n    @Prop() public pointer: boolean = true;\n    @Prop() public measure: Measures = 'px';\n    @Prop() public preserveAspectRatio: string = 'xMinYMin';\n\n    public propsIcon: propsIcon;\n\n    /* istanbul ignore next */\n    render() {\n      return (\n        <i  tabindex=\"-1\"\n            style={this.getDimensions()}\n            class={this.getClassList()}\n            innerHTML={this.getSvg(this.name)}>\n        </i>\n      );\n    }\n    getClassList() {\n      return {\n        [`${this.color}`]: true,\n        [`pointer`]: this.pointer,\n        [`PIconSvg`]: true\n      }\n    }\n    getDimensions() {\n      return {\n        width: `${this.width}${this.measure}`,\n        height: `${this.height}${this.measure}`\n      }\n    }\n\n    getSvg(name: IconName | string) {\n      const icon = getIcon(name);\n      return `\n        <svg focusable=\"false\" width=${this.width} height=${this.height} fill=${this.fill}\n          viewBox='${this.viewbox? this.viewbox: icon.viewbox}'\n          preserveAspectRatio=${this.preserveAspectRatio}\n          xmlns=\"http://www.w3.org/2000/svg\">\n            ${icon.path}\n        </svg>\n      `;\n    }\n}\n\n\n"]}