{"file":"p-button2.js","mappings":";;;;AAAA,MAAM,UAAU,GAAG,+6FAA+6F;;MCSr7F,OAAO;;;;;;gBAGK,SAAS;iBACJ,SAAS;gBAChB,QAAQ;gBACF,SAAS;mBACT,KAAK;oBAIL,EAAE;qBACF,MAAM;uBACJ,MAAM;uBACL,EAAE;;EAEhC,MAAM;IACJ,QACE,cAAQ,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,IAElF,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM;MACrB,IAAI,CAAC,UAAU,EAAE,CAEZ,EACT;GAEH;EAED,UAAU;IACR,QACE,WAAK,KAAK,EAAC,YAAY,IACrB,cAAQ,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAC,SAAS,GAAU,EAE5E,IAAI,CAAC,QAAQ;MACb,aAAO,KAAK,EAAC,MAAM,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,EAAC,IAAI,EAC5E,MAAM,EAAC,IAAI,EACX,KAAK,EAAE,IAAI,CAAC,OAAO,GAAG,WAAW,GAAG,OAAO,GACrC,CAEN,EACP;GACF;EAED,SAAS;IAER,OAAO;MACJ,CAAC,SAAS,GAAG,IAAI;MACjB,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI;MACvB,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI;MACtB,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI;KACvB,CAAC;GACH;EAEO,aAAa;IACnB,QAAQ,IAAI,CAAC,IAAI;MACf,KAAK,UAAU,EAAE,OAAO,WAAW,CAAC;MACpC,KAAK,QAAQ,EAAE,OAAO,WAAW,CAAC;MAClC,KAAK,IAAI,EAAE,OAAO,WAAW,CAAC;KAC/B;IAED,OAAO,UAAU,IAAI,CAAC,IAAI,EAAc,CAAC;GAC1C;EAED,KAAK,CAAC,MAAkB;IACtB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MACjB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC3B;GACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/atoms/p-button/p-button.scss?tag=p-button&encapsulation=shadow","src/components/atoms/p-button/p-button.tsx"],"sourcesContent":["\n:host {\n  * {\n    box-sizing: border-box;\n    font-family: 'Prelo';\n  }\n\n  .pButton {\n    line-height: normal;\n    border: 0.0625rem solid transparent;\n    cursor: pointer;\n    border-radius: 4px;\n    position: relative;\n\n    &.full {\n      width: 100%;\n      min-width: 0px;\n    }\n\n    /*BUTTON STATES*/\n    &:disabled {\n      cursor: auto;\n      pointer-events: none;\n      box-shadow: none;\n    }\n\n    &:active {\n      transform: translateY(0.0625rem);\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    .renderText {\n      color: currentColor;\n\n      p-font {\n        color: currentColor;\n      }\n    }\n\n    .icon {\n      margin-left: 4px;\n    }\n\n    /*BUTTON COLORS*/\n    &.primary {\n      background: #091944;\n      border: 1px solid #091944;\n      color: #ffffff;\n\n      &:hover,\n      &:focus {\n        background: #091944;\n      }\n\n      &:disabled {\n        background: #edeff2;\n        color: #c1c7d4;\n      }\n    }\n\n    &.secondary {\n      background: #FFDD00;\n      border: 1px solid #FFDD00;\n      color: #0F265C;\n\n      &:hover {\n        background: #FFDD00;\n        color: #0F265C;\n        border: none;\n      }\n\n      &:focus {\n        background: #FFDD00;\n        color: #0F265C;\n      }\n\n      &:disabled {\n        background: #edeff2;\n        color: #c1c7d4;\n        border: none;\n      }\n    }\n\n    &.tertiary {\n      background: #DEE3ED;\n      border: 1px solid #DEE3ED;\n      color: #0F265C;\n\n      &:hover {\n        background: #DEE3ED;\n        color: #0F265C;\n        border: none;\n      }\n\n      &:focus {\n        background: #DEE3ED;\n        color: #0F265C;\n      }\n\n      &:disabled {\n        background: #edeff2;\n        color: #c1c7d4;\n        border: none;\n      }\n    }\n\n    &.action {\n      background: #D5E4F2;\n      border: 1px solid #D5E4F2;\n      color: #2F7ABF;\n\n      &:hover {\n        background: #D5E4F2;\n        color: #2F7ABF;\n        border: none;\n      }\n\n      &:focus {\n        background: #D5E4F2;\n        color: #2F7ABF;\n      }\n\n      &:disabled {\n        background: #edeff2;\n        color: #c1c7d4;\n        border: none;\n      }\n    }\n\n    &.dark {\n      background: #565675;\n      color: #FFFFFF;\n\n      &:hover {\n        background: #6F7189;\n        color: #FFFFFF;\n      }\n\n      &:focus {\n        background: #6F7189;\n        color: #FFFFFF;\n      }\n\n      &:disabled {\n        background: #edeff2;\n        color: #c1c7d4;\n      }\n    }\n\n    &.none {\n      background: #EEF1F6;\n      color: #212942;\n\n      &:hover {\n        background: #F8F9FE;\n        color: #212942;\n      }\n\n      &:focus {\n        background: #F8F9FE;\n        color: #212942;\n      }\n\n      &:disabled {\n        background: #edeff2;\n        color: #c1c7d4;\n      }\n    }\n\n    &.green {\n      background: #5CD393;\n      color: #FFFFFF;\n\n      &:hover {\n        background: #6FE1A1;\n        color: #FFFFFF;\n      }\n\n      &:focus {\n        background: #6FE1A1;\n        color: #FFFFFF;\n      }\n\n      &:disabled {\n        background: #edeff2;\n        color: #c1c7d4;\n      }\n    }\n\n    &.danger {\n      background: #ec5073;\n      color: #ffff;\n\n      &:hover {\n        background: #ee798e;\n        color: #ffff;\n      }\n\n      &:focus {\n        background: #ee798e;\n        color: #ffff;\n      }\n\n      &:disabled {\n        background: #EDEFF2;\n        color: #C1C7D4;\n      }\n    }\n\n    &.blue1 {\n      background: #3C96F7;\n      color: #ffff;\n\n      &:hover {\n        background: #5DAAF8;\n        color: #ffff;\n      }\n\n      &:focus {\n        background: #5DAAF8;\n        color: #ffff;\n      }\n\n      &:disabled {\n        background: #EDEFF2;\n        color: #C1C7D4;\n      }\n    }\n\n    /*BUTTON SIZES*/\n    &.normal {\n      padding: 0 26px;\n      height: 48px;\n      min-width: 157px;\n    }\n\n    &.sm {\n      padding: 0 12px;\n      height: 32px;\n      min-width: 115px;\n    }\n\n    &.field-md {\n      padding: 0 15px;\n      height: 36px;\n      min-width: 120px;\n    }\n\n  }\n\n}\n","import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport { ButtonType, Color, FontType, Size, ThemeColor } from '../../../globals/types/types';\n\n\n@Component({\n  tag: 'p-button',\n  styleUrl: 'p-button.scss',\n  shadow: true\n})\nexport class PButton {\n  @Event() buttonClicked: EventEmitter;\n\n  @Prop() text: string = 'Default';\n  @Prop() color: ThemeColor = 'primary';\n  @Prop() size: Size = 'normal';\n  @Prop() type: ButtonType = 'default';\n  @Prop() disable: boolean = false;\n\n\n  // ICON - PROPS\n  @Prop() iconname: string = '';\n  @Prop() iconcolor: Color = 'none';\n  @Prop() iconbgcolor: Color = 'none';\n  @Prop() iconviewbox: string = '';\n\n  render() {\n    return (\n      <button class={this.mainClass()} onClick={ev => this.click(ev)} disabled={this.disable}>\n        {\n          (this.type !== 'icon') &&\n          this.renderText()\n        }\n      </button>\n    );\n\n  }\n\n  renderText() {\n    return (\n      <div class=\"renderText\">\n        <p-font type={this.getButtonFont()} text={this.text} color='current'></p-font>\n        {\n          this.iconname &&\n          <p-svg class=\"icon\" name={this.iconname} viewbox={this.iconviewbox} width=\"15\"\n            height=\"15\"\n            color={this.disable ? 'lightgray' : 'white'}>\n          </p-svg>\n        }\n      </div>\n    )\n  }\n\n  mainClass() {\n\n   return {\n      [`pButton`]: true,\n      [`${this.color}`]: true,\n      [`${this.size}`]: true,\n      [`${this.type}`]: true,\n    };\n  }\n\n  private getButtonFont(): FontType {\n    switch (this.size) {\n      case 'field-md': return 'button_sm';\n      case 'normal': return 'button_md';\n      case 'sm': return 'button_sm';\n    }\n\n    return `button_${this.size}` as FontType;\n  }\n\n  click(_event: MouseEvent) {\n    if (!this.disable) {\n      this.buttonClicked.emit();\n    }\n  }\n}\n"],"version":3}